/**
 * Configuraci√≥n de conexi√≥n a MongoDB
 * Utiliza variables de entorno para la configuraci√≥n
 */

const mongoose = require("mongoose");
require('dotenv').config();

const connectDB = async () => {
  try {
    // Configuraci√≥n de opciones de conexi√≥n
    const options = {
      maxPoolSize: 10, // Mantener hasta 10 conexiones socket
      serverSelectionTimeoutMS: 5000, // Mantener intentando enviar operaciones por 5 segundos
      socketTimeoutMS: 45000, // Cerrar sockets despu√©s de 45 segundos de inactividad
      family: 4, // Usar IPv4, omitir IPv6
    };

    // ‚úÖ Usar variable de entorno MONGODB_URI
    const mongoURI = process.env.MONGODB_URI;
    
    if (!mongoURI) {
      throw new Error('‚ùå MONGODB_URI no est√° definida en las variables de entorno');
    }

    console.log('üîó Conectando a MongoDB...');
    
    // Conectar a MongoDB
    const conn = await mongoose.connect(mongoURI, options);

    console.log(`‚úÖ MongoDB conectado: ${conn.connection.host}`);
    console.log(`üìä Base de datos: ${conn.connection.name}`);

    // Eventos de conexi√≥n
    mongoose.connection.on("error", (err) => {
      console.error("‚ùå Error de conexi√≥n a MongoDB:", err);
    });

    mongoose.connection.on("disconnected", () => {
      console.log("‚ö†Ô∏è  MongoDB desconectado");
    });

    // Manejo graceful del cierre de la aplicaci√≥n
    process.on("SIGINT", async () => {
      await mongoose.connection.close();
      console.log(
        "üîå Conexi√≥n a MongoDB cerrada por terminaci√≥n de la aplicaci√≥n"
      );
      process.exit(0);
    });
  } catch (error) {
    console.error("‚ùå Error conectando a MongoDB:", error.message);
    process.exit(1);
  }
};

module.exports = connectDB;
